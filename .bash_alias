function weather() {
	if [[ -z $1 ]]; then
		curl wttr.in/$1
	elif [[ -z $CITY ]]; then
		curl wttr.in/$CITY
	else
		echo "Please specify city!"
	fi
}

# Create a directory and change to it
function mcd() {
	mkdir -pv $1
	cd $1
}

# Use xdg-open in a subshell, derived output and detached
function open() {
    (nohup xdg-open "$1" >/dev/null 2>&1 &)
}

# Get latest statistics for COVID-19 in USA
function coronavirus_cases() {
	curl -s https://corona-stats.online/GT?minimal=true | head -n 3 | awk '{ print $2 $3 "\t"$5 "\t"$6 "\t" $7 "\t" $8 $9 "\t" $10 $11  }'
}

# Generate a random alphanumeric password
function genpass() {
	local passlen=${1:-32}		# Default length is 32 characters
	LC_ALL=C tr -cd '[:alnum:]' < /dev/urandom | fold -w $passlen | head -n1
}

# Display headers from a web site/URL (requires cURL)
function headers() {
	curl -sv "$@" 2>&1 >/dev/null |
		grep -v "^\*" |
		grep -v "^}" |
		cut -c3-
}

# Simple command-line calculator
function = {
	echo "$@" | bc -l
}
alias calc="="

alias ls='ls --group-directories-first --time-style=+"%m/%d/%Y %H:%M" --color=auto -F'
alias ll='ls -lrt --group-directories-first --time-style=+"%m/%d/%Y %H:%M" --color=auto -F'
alias la='ls -la --group-directories-first --time-style=+"%m/%d/%Y %H:%M" --color=auto -F'

alias rm='rm -i -v'
alias cp='cp -v'
alias mv='mv -v'
alias mkdir='mkdir -pv'
alias top='htop'
alias apt-version='apt-cache madison'

# Get public IP address
alias publicip='curl https://ipecho.net/plain; echo'

# Searchable 'ps' command alias
alias psg="ps aux | grep -v grep | grep -i -e VSZ -e"

# Summary of top 10 commands from history
alias hist_summary='history | awk '\''{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}'\'' | grep -v "./" | column -c3 -s " " -t | sort -nr | nl |  head -n10'

alias dateiso='date -u +"%Y-%m-%dT%H:%M:%SZ"'

# Git aliases
alias gitlog='git log --all --decorate --graph --oneline'
